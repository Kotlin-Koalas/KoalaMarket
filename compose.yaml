services:
  api:
    build: "./backend"
    env_file:
      - .env
    links:
      - db
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
    ports:
      - "${PUBLIC_PORT}:${PORT}"

  db:
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 1s
      timeout: 5s
      retries: 10
    image: "postgres:${POSTGRES_VERSION}"
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data

  image:
    ports:
      - "${IMAGE_PORT}:${IMAGE_PORT}"
    image: hauxir/imgpush
    volumes:
      - ./app:/app
      - ./images:/images
      - ./cache:/cache
    healthcheck:
      start_period: 0s
      test:
        [
          "CMD-SHELL",
          "curl localhost:${IMAGE_PORT}/liveness -s -f -o /dev/null || exit 1",
        ]
      interval: 30s

volumes:
  pgdata:
